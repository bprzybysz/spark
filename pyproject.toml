[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [".git", "__pycache__", "build", "dist"]
ignore = ["E203", "W503"]

[tool.poetry]
name = "spark-etl-ml-pipeline"
version = "0.1.0"
description = "A Spark ETL ML Pipeline for data processing and quality checks"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [
    { include = "src" },
    { include = "tests" }
]

[tool.poetry.dependencies]
python = "^3.11"
pyspark = "^3.5.0"
fastapi = "^0.109.0"
uvicorn = "^0.27.0"
pydantic = "^2.6.4"
tensorflow = "^2.15.0"
numpy = "^1.26.0"
pandas = "^2.2.0"
python-dotenv = "^1.0.0"
dependency-injector = "^4.41.0"
attrs = "^23.2.0"
findspark = "^2.0.1"
pyhive = "^0.7.0"
thrift = "^0.16.0"
thrift-sasl = "^0.4.3"
confluent-kafka = "^2.3.0"
fastavro = "^1.9.0"
pydantic-settings = "^2.1.0"
openapi-schema-validator = "^0.6.2"
openapi-spec-validator = "^0.7.1"
PyYAML = "^6.0.1"
pypdf = "^5.4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^24.1.0"
isort = "^5.13.0"
mypy = "^1.8.0"
flake8 = "^7.0.0"
pre-commit = "^3.6.0"
jupyter = "^1.0.0"
jupyterlab = "^4.1.0"
ipykernel = "^6.29.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.5.0"
mkdocstrings = "^0.24.0" 